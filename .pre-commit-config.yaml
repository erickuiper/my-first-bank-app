# Pre-commit hooks configuration for My First Bank App
# This ensures all CI/CD quality checks pass before committing

repos:
  # Python backend quality checks
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: Black formatting
        args: [--line-length=120]
        types: [python]
        files: ^backend/

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: isort import sorting
        args: [--profile=black, --line-length=120]
        types: [python]
        files: ^backend/

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: Flake8 linting
        args: [--max-line-length=120]
        types: [python]
        files: ^backend/

  # MyPy type checking (temporarily disabled - will re-enable after resolving type annotation issues)
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.8.0
  #   hooks:
  #     - id: mypy
  #       name: MyPy type checking
  #       args: [--config-file=backend/pyproject.toml]
  #       types: [python]
  #       files: ^backend/
  #       additional_dependencies: [types-requests, types-PyYAML]

  # Python test collection check
  - repo: local
    hooks:
      - id: pytest-collection
        name: Pytest collection check
        entry: bash -c 'cd backend && python -m pytest --collect-only -q'
        language: system
        pass_filenames: false
        always_run: true
        stages: [commit]

  # Frontend quality checks
  - repo: local
    hooks:
      - id: frontend-lint
        name: Frontend ESLint
        entry: bash -c 'cd frontend && npm run lint'
        language: system
        pass_filenames: false
        always_run: true
        stages: [commit]

      - id: frontend-type-check
        name: Frontend TypeScript check
        entry: bash -c 'cd frontend && npm run type-check'
        language: system
        pass_filenames: false
        always_run: true
        stages: [commit]

      - id: frontend-build
        name: Frontend build verification
        entry: bash -c 'cd frontend && npm run build'
        language: system
        pass_filenames: false
        always_run: true
        stages: [commit]

  # Git hooks for commit message quality
  - repo: local
    hooks:
      - id: commitlint
        name: Commit message linting
        entry: bash -c 'cd frontend && npx commitlint --edit $1'
        language: system
        stages: [commit-msg]
        pass_filenames: false
        always_run: true

  # File size and type checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trailing whitespace
      - id: end-of-file-fixer
        name: End of file fixer
      - id: check-yaml
        name: YAML syntax check
      - id: check-json
        name: JSON syntax check
      - id: check-added-large-files
        name: Check for large files
        args: [--maxkb=1000]
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-case-conflict
        name: Check for case conflicts
      - id: check-docstring-first
        name: Check docstring first
        types: [python]

  # Pytest unit tests (temporarily disabled due to async/sync SQLAlchemy mismatch)
  # - repo: local
  #   hooks:
  #     - id: pytest
  #       name: Pytest unit tests
  #       entry: pytest
  #       language: system
  #       types: [python]
  #       files: ^backend/
  #       args: [backend/tests/, -v, --tb=short]
  #       pass_filenames: false
  #       always_run: true
  #       stages: [commit, push]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: Bandit security check
        args: ["-r", "backend/app/", "-x", "backend/.venv"]
        types: [python]
        files: ^backend/app/
        pass_filenames: false
        always_run: true

  # Docker file checks (commented out - hadolint not available)
  # - repo: https://github.com/hadolint/hadolint
  #   rev: v2.12.0
  #   hooks:
  #     - id: hadolint-docker
  #       name: Dockerfile linting
  #       entry: hadolint
  #       language: system
  #       types: [dockerfile]
